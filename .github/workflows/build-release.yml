name: smartdns-build-release

on:
  workflow_dispatch:
    inputs:
      version:
        # date +"1.%Y.%m.%d-%H%M"
        description: 'Release version (e.g. 1.2023.08.07-2121)'
        required: true


env:
  # LTS version, eg. 1.1.1w, 3.0.10
  # when openssl is 3.0.10/3.1.2, smartdns build will fail on mips/mipsel/powerpc, https://mta.openssl.org/pipermail/openssl-users/2023-January/015763.html
  OPENSSL_VER: '1.1.1w'
  ARTIFACT_RETENTION_DAYS: '3'

jobs:
  build:
    name: Build ipk(static compile) ${{ matrix.config.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config: 
          - {
              arch: x86,
              musl_cross_target: i686-linux-musl
            }
          - {
              arch: x86_64,
              musl_cross_target: x86_64-linux-musl
            }
          - {
              arch: arm,
              musl_cross_target: armv6-linux-musleabihf
            }
          - {
              arch: arm64,
              musl_cross_target: aarch64-linux-musl
            }
          - {
              arch: mips,
              musl_cross_target: mips-linux-musl
            }
          - {
              arch: mipsel,
              musl_cross_target: mipsel-linux-musl
            }
          - {
              arch: mips64,
              musl_cross_target: mips64-linux-musl
            }
          - {
              arch: mips64el,
              musl_cross_target: mips64el-linux-musl
            }
          - {
              arch: powerpc,
              musl_cross_target: powerpc-linux-musl
            }
          - {
              arch: powerpc64,
              musl_cross_target: powerpc64-linux-musl
            }
          - {
              arch: powerpc64le,
              musl_cross_target: powerpc64le-linux-musl
            }
          - {
              arch: riscv64,
              musl_cross_target: riscv64-linux-musl
            }
    container:
      image: quay.io/bitsaver/musl-cross:${{ matrix.config.musl_cross_target }}-latest
      options: -v ${{ github.workspace }}:/worker --cap-add SYS_ADMIN --device /dev/fuse --security-opt apparmor:unconfined
    steps:
      - name: Checkout SmartDNS Source Code
        uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 1
          path: ./

      - name: Install Build Tools
        run: |
          apk add perl make coreutils tar pkgconfig dpkg binutils

      - name: Prepare & Set Version
        run: |
          mkdir -p /worker/build
          sed -i "s/VER=.*/VER=${{ github.event.inputs.version }}/" /worker/package/build-pkg.sh

      - name: Prepare OpenSSL ${{ env.OPENSSL_VER }} Source Code
        run: |
          apk update && apk add curl
          cd /worker
          mkdir -p /worker/openssl
          curl -LsS https://ftp.openssl.org/source/openssl-${{ env.OPENSSL_VER }}.tar.gz -o openssl.tar.gz
          tar -zxvf openssl.tar.gz --strip-components 1 -C openssl

      # openssl 1.1.1w directory '/worker/openssl':
      # drwxr-xr-x 19 root root    4096 Aug 24 12:10 .
      # drwxr-xr-x 11 1001 ping    4096 Aug 24 12:09 ..
      # -rw-rw-r--  1 root root      87 Aug  1 13:51 ACKNOWLEDGEMENTS
      # -rw-rw-r--  1 root root     854 Aug  1 13:51 AUTHORS
      # -rw-rw-r--  1 root root  613733 Aug  1 13:51 CHANGES
      # -rw-rw-r--  1 root root    3627 Aug  1 13:51 CONTRIBUTING
      # drwxrwxr-x  2 root root    4096 Aug  1 13:51 Configurations
      # -rwxrwxr-x  1 root root  130510 Aug  1 13:51 Configure
      # -rw-rw-r--  1 root root      84 Aug  1 13:51 FAQ
      # -rw-rw-r--  1 root root   57824 Aug  1 13:51 INSTALL
      # -rw-rw-r--  1 root root    6121 Aug  1 13:51 LICENSE
      # -rw-r--r--  1 root root  404943 Aug 24 12:09 Makefile
      # -rw-rw-r--  1 root root   46758 Aug  1 13:51 NEWS
      # -rw-rw-r--  1 root root    4492 Aug  1 13:51 NOTES.ANDROID
      # -rw-rw-r--  1 root root    2093 Aug  1 13:51 NOTES.DJGPP
      # -rw-rw-r--  1 root root    4578 Aug  1 13:51 NOTES.PERL
      # -rw-rw-r--  1 root root    5532 Aug  1 13:51 NOTES.UNIX
      # -rw-rw-r--  1 root root    3861 Aug  1 13:51 NOTES.VMS
      # -rw-rw-r--  1 root root    7488 Aug  1 13:51 NOTES.WIN
      # -rw-rw-r--  1 root root    3157 Aug  1 13:51 README
      # -rw-rw-r--  1 root root   16069 Aug  1 13:51 README.ENGINE
      # -rw-rw-r--  1 root root      61 Aug  1 13:51 README.FIPS
      # drwxrwxr-x  2 root root    4096 Aug  1 13:51 VMS
      # drwxrwxr-x  3 root root    4096 Aug 24 12:10 apps
      # -rw-rw-r--  1 root root    2549 Aug  1 13:51 appveyor.yml
      # -rw-rw-r--  1 root root    4099 Aug  1 13:51 build.info
      # -rwxrwxr-x  1 root root   28664 Aug  1 13:51 config
      # -rw-rw-r--  1 root root    2510 Aug  1 13:51 config.com
      # -rwxr-xr-x  1 root root  362323 Aug 24 12:09 configdata.pm
      # drwxrwxr-x 64 root root    4096 Aug 24 12:10 crypto
      # drwxrwxr-x  9 root root    4096 Aug  1 13:51 demos
      # drwxrwxr-x  7 root root    4096 Aug  1 13:51 doc
      # -rw-rw-r--  1 root root   11055 Aug  1 13:51 e_os.h
      # drwxrwxr-x  3 root root    4096 Aug 24 12:10 engines
      # drwxrwxr-x  3 root root    4096 Aug  1 13:51 external
      # drwxrwxr-x  2 root root    4096 Aug  1 13:51 fuzz
      # drwxrwxr-x  5 root root    4096 Aug  1 13:51 include
      # -rw-r--r--  1 root root 3698888 Aug 24 12:10 libcrypto.a
      # -rw-r--r--  1 root root  127526 Aug 24 12:10 libcrypto.map
      # -rw-r--r--  1 root root     291 Aug 24 12:10 libcrypto.pc
      # lrwxrwxrwx  1 root root      16 Aug 24 12:10 libcrypto.so -> libcrypto.so.1.1
      # -rwxr-xr-x  1 root root 2581816 Aug 24 12:10 libcrypto.so.1.1
      # -rw-r--r--  1 root root  686678 Aug 24 12:10 libssl.a
      # -rw-r--r--  1 root root   16073 Aug 24 12:10 libssl.map
      # -rw-r--r--  1 root root     270 Aug 24 12:10 libssl.pc
      # lrwxrwxrwx  1 root root      13 Aug 24 12:10 libssl.so -> libssl.so.1.1
      # -rwxr-xr-x  1 root root  560940 Aug 24 12:10 libssl.so.1.1
      # drwxrwxr-x  2 root root    4096 Aug  1 13:51 ms
      # -rw-r--r--  1 root root     224 Aug 24 12:10 openssl.pc
      # drwxrwxr-x  2 root root    4096 Aug  1 13:51 os-dep
      # drwxrwxr-x  4 root root    4096 Aug 24 12:10 ssl
      # drwxrwxr-x 11 root root   12288 Aug  1 13:51 test
      # drwxrwxr-x  2 root root    4096 Aug 24 12:10 tools
      # drwxrwxr-x  3 root root    4096 Aug 24 12:10 util
      # drwxrwxr-x  2 root root    4096 Aug  1 13:51 wycheproof
      - name: Build OpenSSL ${{ env.OPENSSL_VER }}
        env:
          ARCH: ${{ matrix.config.arch }}
        run: |
          mkdir -p /worker/openssl
          cd /worker/openssl
          if [ "$ARCH" == "mipsel" ] || [ "$ARCH" == "mips" ] ; then
            OPENSSL_ARCH="linux-mips32"
          elif [ "$ARCH" == "mips64el" ] || [ "$ARCH" == "mips64" ] ; then
            OPENSSL_ARCH="linux-generic64"
          elif [ "$ARCH" == "powerpc" ] ; then
            OPENSSL_ARCH="linux-ppc"
          elif [ "$ARCH" == "powerpc64" ] ; then
            OPENSSL_ARCH="linux-generic64"
          elif [ "$ARCH" == "powerpc64le" ] ; then
            OPENSSL_ARCH="linux-ppc64le"
          elif [ "$ARCH" == "arm" ] ; then
            OPENSSL_ARCH="linux-armv4"
          elif [ "$ARCH" == "arm64" ] ; then
            OPENSSL_ARCH="linux-aarch64"
          elif [ "$ARCH" == "riscv64" ] ; then
            OPENSSL_ARCH="linux64-riscv64"
          elif [ "$ARCH" == "x86" ] ; then
            OPENSSL_ARCH="linux-x86"
          elif [ "$ARCH" == "x86_64" ] ; then
            OPENSSL_ARCH="linux-x86_64"
          else
            OPENSSL_ARCH="linux-$ARCH"
          fi
          perl ./Configure ${OPENSSL_ARCH} no-tests
          make all -j$(nproc)

      - name: Build Smartdns
        env:
          ARCH: ${{ matrix.config.arch }}
        run: |
          cd /worker
          export CFLAGS="-I /worker/openssl/include"
          export LDFLAGS="-s -Wl,--build-id=sha1 -L /worker/openssl"
          sh ./package/build-pkg.sh --platform debian --arch all --filearch $ARCH-debian --static --outputdir /worker/build
          sh ./package/build-pkg.sh --platform linux --arch all --filearch $ARCH-linux --static --outputdir /worker/build
          sh ./package/build-pkg.sh --platform openwrt --arch all --filearch $ARCH-openwrt --static --outputdir /worker/build
          sh ./package/build-pkg.sh --platform optware --arch all --filearch $ARCH-optware --static --outputdir /worker/build
          cp ./src/smartdns /worker/build/smartdns-$ARCH -a

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/build
          name: ${{ matrix.config.musl_cross_target }}
          if-no-files-found: error
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ github.token }}
          file: ${{ github.workspace }}/build/*
          tag: v${{ github.event.inputs.version }}
          file_glob: true
          release_name: 'Release SmartDNS ${{ github.event.inputs.version }}'
          overwrite: true
          prerelease: false
          body: 'SmartDNS static version, built `${{ github.event.inputs.version }}`. OpenSSL `${{ env.OPENSSL_VER }}`.'

  build-luci:
    name: Build luci-app-smartdns
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [luci, luci-compat]
    steps:
      - name: Checkout SmartDNS Source Code
        uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 1
          path: ./

      - name: Build luci
        continue-on-error: true
        run: |
          cd ${{ github.workspace }}
          mkdir -p ${{ github.workspace }}/build
          sed -i "s/VER=.*/VER=${{ github.event.inputs.version }}/" package/build-pkg.sh
          sh ${{ github.workspace }}/package/build-pkg.sh --platform ${{ matrix.platform }} --arch all --filearch ${{ matrix.platform }}-all --outputdir ${{ github.workspace }}/build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/build
          name: ${{ matrix.platform }}
          if-no-files-found: error
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ github.token }}
          file: ${{ github.workspace }}/build/*
          tag: v${{ github.event.inputs.version }}
          file_glob: true
          release_name: 'Release SmartDNS ${{ github.event.inputs.version }}'
          overwrite: true
          prerelease: false
          body: 'SmartDNS static version, built `${{ github.event.inputs.version }}`. OpenSSL `${{ env.OPENSSL_VER }}`.'
